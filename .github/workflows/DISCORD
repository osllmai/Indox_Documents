name: GitHub Auto Tag & Release with Discord Notification

on:
  push:
    branches: [ "master", "development" ]
  workflow_dispatch:

permissions:
  contents: write  # Ensures GitHub Actions can push tags and create releases

jobs:
  tag_and_release:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch full history to get all tags

      - name: Determine Branch and Set Label
        id: branch_label
        run: |
          BRANCH_NAME=${{ github.ref_name }}

          if [[ "$BRANCH_NAME" == "master" ]]; then
            LABEL="Master"
          elif [[ "$BRANCH_NAME" == "development" ]]; then
            LABEL="Dev"
          else
            echo "Error: Unsupported branch '$BRANCH_NAME'."
            exit 1
          fi

          echo "LABEL=$LABEL" >> $GITHUB_ENV

      - name: Fetch Latest Tag and Determine Next Version
        id: versioning
        run: |
          git fetch --tags
          LATEST_TAG=$(git tag -l "v*-${LABEL}" --sort=-v:refname | head -n 1 | tr -d '\r')

          if [[ -z "$LATEST_TAG" ]]; then
            NEW_TAG="v0.1.0-${LABEL}"
          else
            if [[ "$LATEST_TAG" =~ ^v([0-9]+)\.([0-9]+)\.([0-9]+)-${LABEL}$ ]]; then
              MAJOR="${BASH_REMATCH[1]}"
              MINOR="${BASH_REMATCH[2]}"
              PATCH="${BASH_REMATCH[3]}"
            else
              echo "Error: Could not parse latest tag '$LATEST_TAG'"
              exit 1
            fi

            PATCH=$((PATCH + 1))
            NEW_TAG="v$MAJOR.$MINOR.$PATCH-${LABEL}"
          fi

          echo "NEW_TAG=$NEW_TAG" >> $GITHUB_ENV

      - name: Configure Git User
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"

      - name: Create and Push New Git Tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git tag "$NEW_TAG"
          git push origin "$NEW_TAG"

      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create "$NEW_TAG" \
            --title "Release $NEW_TAG" \
            --notes "Automated release generated for $NEW_TAG."

  notify_discord:
    runs-on: ubuntu-latest
    needs: tag_and_release
    steps:

      - name: Send GitHub Event Notification to Discord
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_MASTER_URL }}
          REPO: ${{ github.repository }}
          TIMESTAMP: ${{ github.event.head_commit.timestamp }}
        run: |
          JSON_PAYLOAD=$(jq -n \
            --arg timestamp "$TIMESTAMP" \
            --arg repo "$REPO" \
            --arg tag "$NEW_TAG" \
            '{
              "username": "GitHub Bot",
              "avatar_url": "https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png",
              "embeds": [
                {
                  "title": "üöÄ New Release: \($tag)",
                  "description": "A new release has been created for the repository.",
                  "fields": [
                    {
                      "name": "üìÖ Timestamp",
                      "value": $timestamp,
                      "inline": false
                    },
                    {
                      "name": "üìÇ Repository",
                      "value": "[\($repo)](https://github.com/\($repo))",
                      "inline": false
                    },
                    {
                      "name": "üè∑Ô∏è Tag",
                      "value": "\($tag)",
                      "inline": false
                    }
                  ]
                }
              ]
            }')

          curl -H "Content-Type: application/json" -X POST -d "$JSON_PAYLOAD" "$DISCORD_WEBHOOK_URL"
