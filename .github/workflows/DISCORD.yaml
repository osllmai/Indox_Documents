      - name: Load README.md Content
        id: load_markdown
        run: |
          MARKDOWN_CONTENT=$(curl -sL https://raw.githubusercontent.com/osllmai/Indox_Documents/master/README.md | head -c 1500 | jq -Rs .)
          echo "MARKDOWN_CONTENT=$MARKDOWN_CONTENT" >> $GITHUB_ENV

      - name: Send GitHub Event Notification to Discord
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_MASTER_URL }}
        run: |
          set -x  # Enable debugging

          JSON_PAYLOAD=$(jq -n \
            --arg timestamp "$TIMESTAMP" \
            --arg repo "$REPO" \
            --arg markdown_url "$MARKDOWN_URL" \
            --arg tag "$TAG_NAME" \
            --arg version "$VERSION_NAME" \
            --arg markdown_content "$MARKDOWN_CONTENT" \
            '{
              "username": "GitHub Bot",
              "avatar_url": "https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png",
              "embeds": [
                {
                  "title": "üöÄ Release \($version)",
                  "description": "We are excited to announce the latest release of our project!",
                  "fields": [
                    {
                      "name": "üìÖ Timestamp",
                      "value": $timestamp,
                      "inline": false
                    },
                    {
                      "name": "üìÇ Repository",
                      "value": "[\($repo)](https://github.com/\($repo))",
                      "inline": false
                    },
                    {
                      "name": "üìú Markdown Documentation",
                      "value": "[Click here](\($markdown_url))\n\nMarkdown Preview:\n```\n\($markdown_content | sub("\n";" "))\n```",
                      "inline": false
                    },
                    {
                      "name": "üè∑Ô∏è Tag",
                      "value": "\($tag) - \($timestamp)",
                      "inline": false
                    },
                    {
                      "name": "üöÄ Version",
                      "value": "Release \($version)",
                      "inline": false
                    }
                  ]
                }
              ]
            }')

          # Validate JSON formatting before sending
          echo "$JSON_PAYLOAD" | jq .

          # Send to Discord webhook
          curl -H "Content-Type: application/json" -X POST -d "$JSON_PAYLOAD" "$DISCORD_WEBHOOK_URL"
